subcode:: dumpout
    $(set:t=$MyDef::page->{type})
    $if $(t) && $(t) eq "css"
        $call dump_style_list, css
    $else
        my $metablock=MyDef::compileutil::get_named_block("meta")
        $call dumpmeta, $metablock

subcode: dumpmeta(block)
    my $charset=$page->{charset}
    $if !$charset
        $charset="utf-8"
    my $title=$page->{title}
    $if !$title
        $title=$page->{pagename}
    push @$(block), "<meta charset=\"$charset\">"
    push @$(block), "<title>$title</title>\n"

    my %sheet_hash;
    $foreach $s in @$style_sheets
        $if !$sheet_hash{$s}
            $sheet_hash{$s}=1;
            push @$(block), "<link rel=\"stylesheet\" type=\"text/css\" href=\"$s\" />\n";

    $if @style_key_list
        push @$(block), "<style>\n"
        $call dump_style_list, meta
        push @$(block), "</style>\n"

subcode: dump_style_list(type)
    $foreach $k in @style_key_list
        my %attr;
        my @attr;
        my @tlist=split /;/, $style->{$k};
        $foreach $t in @tlist
            $if $t=~/([^ :]+):\s*(.*)/
                $if !defined $attr{$1}
                    push @attr, $1;
                $attr{$1}=$2;
        @tlist=();
        $foreach $a in @attr
            push @tlist, "$a: $attr{$a}";
            # border-radius|box-shadow
            $if $a=~/(transition|user-select)/
                $foreach $prefix in ("moz", "webkit", "ms", "o")
                    push @tlist, "-$prefix-$a: $attr{$a}"
            $if $attr{$a}=~/^\s*(linear-gradient)/
                $foreach $prefix in ("moz", "webkit", "ms", "o")
                    push @tlist, "$a: -$prefix-$attr{$a}"
        $(if:type=css)
            push @$out, "$k {". join('; ', @tlist)."}\n";
        $(else)
            push @$(block), "    $k {". join('; ', @tlist)."}\n";
# ------------------------------------------------------------
subcode: include_html_template
    $if open my $in, $param
        my $omit=0;
        $while <$in>
            $if /<!-- start omit -->/
                $omit=1;
            $elsif $omit
                $if /<!-- end omit -->/
                    $omit=0;
                next
            $elsif /(.*)<call>(\w+)<\/call>(.*)/
                my ($a, $b, $c)=($1, $2, $3);
                push @$out, $a;
                print "    call $b\n";
                MyDef::compileutil::call_sub($b);
                push @$out, $c;
            $elsif /^\s*<\/HEAD>/i
                push @$out, "DUMP_STUB meta"
                push @$out, $_;
            $else
                push @$out, $_;
        close $in;
    $else
        warn " Can't open [$param]\n";

